#############################################################################
# This file contains the gui specs for
# the dialog box that comes up when you select from the SPlusMenuBar
#   "Statistics"  "Resample"  "Jackknife..."
# The dialog box is named "Jackknife and Influence"
#
# This file also contains the following functions:
#   callBackJackknife  - the call back function
#   menuJackknifeInfluence  - the menu function
#   createMenuJackknife  - the call that adds "Jackknife..." to the menu
#   removeMenuJackknife  - the call that removes "Jackknife..." from the menu
#
#############################################################################



######################################################################
#	jack_JackOrInfluence
#  jackGroup_JackOrInfluence
#   jackPage_Model
######################################################################

newProperty(Name = "resamp_JackOrInfluence",
	    DialogControl = "Combo Box",
	    DialogPrompt = "Method:",
	    IsList = F,
	    UseQuotes = T,
	    DefaultValue = "jackknife",
	    OptionList = c(
	      "jackknife",
	      "influence"
	      )
	    )

newProperty(Name = "jackGroup_JackOrInfluence", Type = "Group",
	    DialogPrompt = "Jackknife or Influence",
	    PropertyList = "resamp_JackOrInfluence")

newProperty(Name = "jackPage_Model", Type = "Page",
	    DialogPrompt = "Model",
	    PropertyList=c(
	      "resampGroup_Data",
	      "resampGroup_Statistic",
	      "resampGroup_Additional",
	      "resamp_Space1",
	      "resamp_Space2",
	      "resamp_Space3",
	      "jackGroup_JackOrInfluence",
	      "resamp_Space4",
	      "resamp_Space5",
	      "resamp_Space6",
	      "resamp_Space7",
	      "resampGroup_SaveJack",
	      )
	    )


######################################################################
# jackPage_Options
######################################################################

newProperty(Name = "jackPage_Options", Type = "Page",
	    DialogPrompt = "Options",
	    PropertyList=c(
	      "resampGroup_OptionsJack",
	      )
	    )



######################################################################
#
# jackPage_Results  PAGE
# TAB: Results
#
######################################################################

newProperty(Name = "jackPage_Results", Type = "Page",
	    DialogPrompt = "Results",
	    PropertyList=c(
	      "resampGroup_SummaryJack",
	      "resampGroup_Plots"
	      )
	    )



######################################################################
#
# menuJackknifeInfluence  FunctionInfo
# DialogHeader:  Jackknife and Influence
#
######################################################################

resampFormatArgumentList <- function(...){
  v <- c(...)
  paste("#", seq(from=0, length=length(v)), "=", v, sep="")
}

newFunctionInfo(Name = "menuJackknifeInfluence",
		DialogHeader = "Jackknife and Influence",
		CallBackFunction = "callbackJackknifeResample",
		HelpCommand = 'help("function_menuJackknifeInfluence")',
		PropertyList = c(
		  "jackPage_Model",
		  "jackPage_Options",
		  "jackPage_Results",
		  ),

		ArgumentList=resampFormatArgumentList(
		  "resamp_SaveAsJack",
		  "resamp_Data",    
		  "resamp_Statistic",         
		  "resamp_Additional",
		  "resamp_JackOrInfluence",
		  "resamp_strata",     
		  "resamp_subject",   
		  "resamp_assignFrame1",   
		  "resamp_SummaryStats",
		  "resamp_Percentiles",         
		  "resamp_tLimitsResample",
		  "resamp_ABC",
		  "resamp_Levels",       
		  "resamp_Correlation",         
		  "resamp_SaveSummary",
		  "resamp_Histogram",  
		  "resamp_QQ",
		  "resamp_PlotBoth",
		  )
		)

rm(resampFormatArgumentList)


menuJackknifeInfluence <-
function(data,
	 statistic,
	 additional.args,
	 JackOrInfluence = "jackknife",
	 group,
	 subject,
	 assign.frame1=F,
	 summ.short,
	 summ.emp,
	 summ.tLimits,
	 summ.ABC,
	 summ.probs = ".025, .05, .95, .975",
	 summ.cor,
	 summ.save.object,
	 plot.dist = F,
	 plot.QQ = F,
	 plot.both = T)
{
  DEBUG <- (exists( ".resample.debug" ) && .resample.debug)
  fun.call <- match.call()

  if( DEBUG ) {
    cat( "AT BEGINNING of menu function.\n" )
    print( fun.call )
  }

  fun.call[[1]] <- as.name(JackOrInfluence)
  fun.args <- is.element(arg.names(fun.call), c( "data", "statistic",
					       "group", "subject", "assign.frame1" ))

  fun.call <- fun.call[c(T, fun.args)]
  if(!assign.frame1) fun.call$assign.frame1 <- NULL

  if( DEBUG )
    print( fun.call )

  if(!missing(additional.args))
    fun.call <- resampAddArgumentsToCall(fun.call, additional.args)

  if( DEBUG ) {
    cat( "\nnames( fun.call ):" )
    print(  names( fun.call ) )
    cat( "\nfun.call: " )
    print(  fun.call )
    cat( "\n" )
  }

  #
  # Call jackknife or influence
  #
  jack.obj <- eval(fun.call, local=F)
  print( jack.obj )

  #
  # Call summary function:
  summ.obj <- tabSummary.jackknife(jack.obj, summ.probs, summ.short,
				  summ.emp, summ.tLimits, summ.ABC,
				  summ.cor )

  if(!missing(summ.save.object) && summ.save.object != "")
    assign(summ.save.object, summ.obj, where = 1, immediate = T)

  # Call plot function:
  tabPlot.resamp(jack.obj, plot.dist, plot.QQ, plot.both )

  invisible(jack.obj)
}



callbackJackknifeResample <- function(dfp){
  if(cbIsNewOrChange(dfp, "resamp_Data"))
    dfp <- callbackVarsFromDataFrame(dfp, "resamp_Data",
				    c("resamp_strata", "resamp_subject"))
  dfp
}


createMenuJackknife <- function() {
  resample.name <- "SPlusMenuBar$Statistics$Resample"
  guiCreate( "MenuItem",
            Name = paste( resample.name,"$JackknifeResample", sep=""),
            Type = "MenuItem",
            Action = "Function",
            MenuItemText = "Jackknife and Influence...",
            Command = "menuJackknifeInfluence",
	    Overwrite = F,
            Index = "4",
	    )
  invisible()

}

removeMenuJackknife <- function(){
  menu.item.name <- "SPlusMenuBar$Statistics$Resample$JackknifeResample"
  if(is.element(menu.item.name, guiGetObjectNames("MenuItem")))
    guiRemove("MenuItem",Name=menu.item.name )
  invisible()
}


"Done with guiJackknife.ssc" # for script file input
