# Context menus for when you right-click on a bootstrap object.
# In current version, options added are
#	Summary, Plot, Jackknife after Bootstrap
# and clicking help brings up the engine help file for bootstrap.

# Here are:
#   ClassInfo		bootstrap
#   MenuItem		bootstrap
#   MenuItem		bootstrap$tabSummary.bootstrap
#   MenuItem		bootstrap$tabPlot.bootstrap
#   MenuItem		bootstrap$tabJab.bootstrap
#   FunctionInfo	tabSummary.bootstrap
#   FunctionInfo	tabPlot.bootstrap
#   FunctionInfo	tabJab.bootstrap
# Elsewhere
#	tabSummary.bootstrap	in tabSummary.bootstrap.q
#	tabPlot.bootstrap	in tabplot.q (just calls tabPlot.resamp)
#	tabPlot.resamp		in tabplot.q
#	tabJab.bootstrap	in S+

# In Object Explorer, clicking on object shows:
#  * main menuItem, and three sub-menus (Results, Plot, JAB)
#  * corresponding FunctionInfo calls.

# Remove old version (is this necessary?; does it help?)
# menu.item.name _ "bootstrap"
# if(is.element(menu.item.name, guiGetObjectNames("MenuItem")))
#   guiRemove("MenuItem",Name = menu.item.name )

guiCreate( "ClassInfo", Name = "bootstrap",
	  ContextMenu = "bootstrap",
	  SavePathName = "",
	  ImageFileName = "boot.bmp",
	  DoubleClickAction = "tabSummary.bootstrap")

##################################################
# MenuItem's

guiCreate( "MenuItem", Name = "bootstrap",
	  Type = "Menu",
	  DocumentType = "bootstrap")
#	  Index = "31")  # Is there a reason for this?

guiCreate( "MenuItem", Name = "bootstrap$tabSummary.bootstrap",
	  Type = "MenuItem",
	  DocumentType = "bootstrap",
	  Action = "Function",
	  MenuItemText = "Summary...",
	  Command = "tabSummary.bootstrap")
#	  Index = "1") necessary?

guiCreate( "MenuItem", Name = "bootstrap$tabPlot.bootstrap",
	  Type = "MenuItem",
	  DocumentType = "bootstrap",
	  Action = "Function",
	  MenuItemText = "Plot...",
	  Command = "tabPlot.resamp") # this rather than plot; brings up menu
#	  Index = "2")

guiCreate( "MenuItem", Name = "bootstrap$tabJab.bootstrap",
	  Type = "MenuItem",
	  DocumentType = "bootstrap",
	  Action = "Function",
	  MenuItemText = "Jackknife After Bootstrap...",
	  Command = "tabJab.bootstrap")
#	  Index = "3")


##################################################
# FunctionInfo

resampFormatArgumentList <- function(...){
  v <- c(...)
  paste("#", seq(from=0, length=length(v)), "=", v, sep="")
}

# tabSummary.bootstrap is defined in tabSummary.bootstrap.q
guiCreate( "FunctionInfo", Name = "tabSummary.bootstrap",
	  Function = "tabSummary.bootstrap",
	  DialogHeader = "Bootstrap Results",
	  PropertyList = c(
	    "SPropInvisibleReturnObject",
	    "SPropCurrentObject",
	    "resampGroup_SummaryBoot",
	    "resampGroup_Replicates",
	    ),
	  ArgumentList = resampFormatArgumentList(
	    "SPropInvisibleReturnObject",
	    "SPropCurrentObject",
	    "resamp_Levels",
	    "resamp_SummaryStats",
	    "resamp_Percentiles",
	    "resamp_BCa",
	    "resamp_Correlation",
	    "resamp_Tilting",
	    "resamp_tLimits",
	    "resamp_SaveSummary",
	    "resamp_ViewReplicates",
	    "resamp_SaveReplicates",
	    ),
	  CallBackFunction="backTabSummary.bootstrap"
	  )


guiCreate( "FunctionInfo", Name = "tabPlot.resamp",  # not bootstrap
	  Function = "tabPlot.resamp",
	  DialogHeader = "Resampling Plots",
	  PropertyList = c(
	    "SPropInvisibleReturnObject",
	    "SPropCurrentObject",
	    "resampGroup_Plots",
	    ),
	  ArgumentList = resampFormatArgumentList(
	    "SPropInvisibleReturnObject",
	    "SPropCurrentObject",
	    "resamp_Histogram",
	    "resamp_QQ",
	    "resamp_PlotBoth",
	    )
	  )


guiCreate( "FunctionInfo", Name = "tabJab.bootstrap",
	Function = "tabJab.bootstrap",
	DialogHeader = "Jackknife After Bootstrap",
	PropertyList = c(
	  "SPropInvisibleReturnObject",
	  "SPropCurrentObject",
	  "gui_boot_jab",
	  ),
	ArgumentList = resampFormatArgumentList(
	  "SPropInvisibleReturnObject",
	  "SPropCurrentObject",
	  "SPropJabFunctional",
	  "SPropJabPrint",
	  "SPropJabPlot",
	  "SPropJabSaveName",
	  ),
	  DefaultValueList = "#3=T",  # set JabPrint to T
	  )

# May want to use:
#	HelpCommand = "",
#	SavePathName = "",
rm(resampFormatArgumentList)

##################################################
# Callback functions
backTabSummary.bootstrap <- function(dfp)
{
  if(cbIsChange(dfp, "resamp_ViewReplicates") &&
     cbGetCurrValue(dfp, "resamp_ViewReplicates") &&
     cbGetCurrValue(dfp, "resamp_SaveReplicates") == "")
    dfp <- cbSetCurrValue(dfp, "resamp_SaveReplicates", "replicates")
}

##################################################
# Properties - long list, see originals/contextBootstrap.ssc



##################################################
# Functions defined elsewhere, here for reference
##################################################
# see originals/contextBootstrap.ssc for old versions

# old:
# tabSummary.bootstrap(boot.obj, probs = c(25, 50, 950, 975)/1000,
#	print.short.p = T, print.emp.p = F, print.bca.p = F, print.cor.p = F)
#
# For a while (including beta5) had this:
# tabSummary.bootstrap(obj, probs = c(25, 50, 950, 975)/1000, percentiles = F,
# 		     bca = T, tilting = F, tLimits = F, correlations = F,
# 		     printSummary = T, printCall = NULL, ...)

# Now return to order of old arguments, but new names
#tabSummary.bootstrap(obj, probs = c(25, 50, 950, 975)/1000,
#	printSummary = T, percentiles = T, bca = T, correlations = F,
#	tilting = F, tLimits = F, save.obj = "",
#	viewReplicates = F, replicatesName = "", ..., printCall = NULL)

# old:
# tabPlot.bootstrap(boot.obj, plot.p, plotQQ.p)
#
# new:
# tabPlot.resamp(obj, plotHist = F, plotQQ = F, plot.both = F, new = T,
# 	       ..., main = NULL, subset.statistic = 1:p)

# tabJab.bootstrap(boot.obj, functional.jab = mean, print.jab.p = F,
# 		 plot.jab.p = F, save.name.jab = NULL, call.new.graphsheet = T,
# 		 substitute.functional.name = NULL)


"Done with contextBootstrap.ssc" # for script file input
